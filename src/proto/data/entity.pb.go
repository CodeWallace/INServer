// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: entity.proto

package data

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EntityType int32

const (
	EntityType_OAAEntity     EntityType = 0
	EntityType_RoleEntity    EntityType = 1
	EntityType_MonsterEntity EntityType = 2
	EntityType_BulletEntity  EntityType = 3
	EntityType_NPCEntity     EntityType = 4
	EntityType_TriggerEntity EntityType = 5
)

var EntityType_name = map[int32]string{
	0: "OAAEntity",
	1: "RoleEntity",
	2: "MonsterEntity",
	3: "BulletEntity",
	4: "NPCEntity",
	5: "TriggerEntity",
}

var EntityType_value = map[string]int32{
	"OAAEntity":     0,
	"RoleEntity":    1,
	"MonsterEntity": 2,
	"BulletEntity":  3,
	"NPCEntity":     4,
	"TriggerEntity": 5,
}

func (x EntityType) String() string {
	return proto.EnumName(EntityType_name, int32(x))
}

func (EntityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cf50d946d740d100, []int{0}
}

type EntityRealtimeData struct {
	LastStaticMapUUID    string   `protobuf:"bytes,1,opt,name=LastStaticMapUUID,proto3" json:"LastStaticMapUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntityRealtimeData) Reset()         { *m = EntityRealtimeData{} }
func (m *EntityRealtimeData) String() string { return proto.CompactTextString(m) }
func (*EntityRealtimeData) ProtoMessage()    {}
func (*EntityRealtimeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf50d946d740d100, []int{0}
}
func (m *EntityRealtimeData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EntityRealtimeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EntityRealtimeData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EntityRealtimeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityRealtimeData.Merge(m, src)
}
func (m *EntityRealtimeData) XXX_Size() int {
	return m.Size()
}
func (m *EntityRealtimeData) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityRealtimeData.DiscardUnknown(m)
}

var xxx_messageInfo_EntityRealtimeData proto.InternalMessageInfo

func (m *EntityRealtimeData) GetLastStaticMapUUID() string {
	if m != nil {
		return m.LastStaticMapUUID
	}
	return ""
}

type EntityData struct {
	EntityUUID           string              `protobuf:"bytes,1,opt,name=EntityUUID,proto3" json:"EntityUUID,omitempty"`
	RealTimeData         *EntityRealtimeData `protobuf:"bytes,2,opt,name=RealTimeData,proto3" json:"RealTimeData,omitempty"`
	Components           []*Component        `protobuf:"bytes,3,rep,name=Components,proto3" json:"Components,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *EntityData) Reset()         { *m = EntityData{} }
func (m *EntityData) String() string { return proto.CompactTextString(m) }
func (*EntityData) ProtoMessage()    {}
func (*EntityData) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf50d946d740d100, []int{1}
}
func (m *EntityData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EntityData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EntityData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EntityData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityData.Merge(m, src)
}
func (m *EntityData) XXX_Size() int {
	return m.Size()
}
func (m *EntityData) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityData.DiscardUnknown(m)
}

var xxx_messageInfo_EntityData proto.InternalMessageInfo

func (m *EntityData) GetEntityUUID() string {
	if m != nil {
		return m.EntityUUID
	}
	return ""
}

func (m *EntityData) GetRealTimeData() *EntityRealtimeData {
	if m != nil {
		return m.RealTimeData
	}
	return nil
}

func (m *EntityData) GetComponents() []*Component {
	if m != nil {
		return m.Components
	}
	return nil
}

func init() {
	proto.RegisterEnum("EntityType", EntityType_name, EntityType_value)
	proto.RegisterType((*EntityRealtimeData)(nil), "EntityRealtimeData")
	proto.RegisterType((*EntityData)(nil), "EntityData")
}

func init() { proto.RegisterFile("entity.proto", fileDescriptor_cf50d946d740d100) }

var fileDescriptor_cf50d946d740d100 = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xcd, 0x2b, 0xc9,
	0x2c, 0xa9, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x97, 0xe2, 0x4f, 0xce, 0xcf, 0x2d, 0xc8, 0xcf,
	0x4b, 0xcd, 0x2b, 0x81, 0x08, 0x28, 0x39, 0x71, 0x09, 0xb9, 0x82, 0x15, 0x04, 0xa5, 0x26, 0xe6,
	0x94, 0x64, 0xe6, 0xa6, 0xba, 0x24, 0x96, 0x24, 0x0a, 0xe9, 0x70, 0x09, 0xfa, 0x24, 0x16, 0x97,
	0x04, 0x97, 0x24, 0x96, 0x64, 0x26, 0xfb, 0x26, 0x16, 0x84, 0x86, 0x7a, 0xba, 0x48, 0x30, 0x2a,
	0x30, 0x6a, 0x70, 0x06, 0x61, 0x4a, 0x28, 0x4d, 0x64, 0xe4, 0xe2, 0x82, 0x18, 0x02, 0xd6, 0x2c,
	0x07, 0xe3, 0x21, 0xe9, 0x42, 0x12, 0x11, 0x32, 0xe7, 0xe2, 0x01, 0x59, 0x16, 0x02, 0xb5, 0x4c,
	0x82, 0x49, 0x81, 0x51, 0x83, 0xdb, 0x48, 0x58, 0x0f, 0xd3, 0x1d, 0x41, 0x28, 0x0a, 0x85, 0xb4,
	0xb8, 0xb8, 0x9c, 0x61, 0xce, 0x2f, 0x96, 0x60, 0x56, 0x60, 0xd6, 0xe0, 0x36, 0xe2, 0xd2, 0x83,
	0x0b, 0x05, 0x21, 0xc9, 0x6a, 0x15, 0xc1, 0x1c, 0x11, 0x52, 0x59, 0x90, 0x2a, 0xc4, 0xcb, 0xc5,
	0xe9, 0xef, 0xe8, 0x08, 0x11, 0x10, 0x60, 0x10, 0xe2, 0xe3, 0xe2, 0x0a, 0xca, 0xcf, 0x49, 0x85,
	0xf2, 0x19, 0x85, 0x04, 0xb9, 0x78, 0x7d, 0xf3, 0xf3, 0x8a, 0x4b, 0x52, 0x8b, 0xa0, 0x42, 0x4c,
	0x42, 0x02, 0x5c, 0x3c, 0x4e, 0xa5, 0x39, 0x39, 0xa9, 0x25, 0x50, 0x11, 0x66, 0x90, 0x19, 0x7e,
	0x01, 0xce, 0x50, 0x2e, 0x0b, 0x48, 0x4f, 0x48, 0x51, 0x66, 0x7a, 0x3a, 0x5c, 0x0f, 0xab, 0x93,
	0xe6, 0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7, 0x38, 0xe3, 0xb1,
	0x1c, 0x43, 0x94, 0xb8, 0xa7, 0x5f, 0x70, 0x6a, 0x51, 0x59, 0x6a, 0x91, 0x7e, 0x71, 0x51, 0xb2,
	0x3e, 0x38, 0xc4, 0xf5, 0x53, 0x12, 0x4b, 0x12, 0x93, 0xd8, 0xc0, 0x6c, 0x63, 0x40, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xd2, 0xcd, 0xf3, 0xce, 0x9e, 0x01, 0x00, 0x00,
}

func (m *EntityRealtimeData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EntityRealtimeData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EntityRealtimeData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LastStaticMapUUID) > 0 {
		i -= len(m.LastStaticMapUUID)
		copy(dAtA[i:], m.LastStaticMapUUID)
		i = encodeVarintEntity(dAtA, i, uint64(len(m.LastStaticMapUUID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EntityData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EntityData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EntityData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Components) > 0 {
		for iNdEx := len(m.Components) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Components[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintEntity(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.RealTimeData != nil {
		{
			size, err := m.RealTimeData.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintEntity(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.EntityUUID) > 0 {
		i -= len(m.EntityUUID)
		copy(dAtA[i:], m.EntityUUID)
		i = encodeVarintEntity(dAtA, i, uint64(len(m.EntityUUID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintEntity(dAtA []byte, offset int, v uint64) int {
	offset -= sovEntity(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *EntityRealtimeData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.LastStaticMapUUID)
	if l > 0 {
		n += 1 + l + sovEntity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EntityData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.EntityUUID)
	if l > 0 {
		n += 1 + l + sovEntity(uint64(l))
	}
	if m.RealTimeData != nil {
		l = m.RealTimeData.Size()
		n += 1 + l + sovEntity(uint64(l))
	}
	if len(m.Components) > 0 {
		for _, e := range m.Components {
			l = e.Size()
			n += 1 + l + sovEntity(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovEntity(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozEntity(x uint64) (n int) {
	return sovEntity(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *EntityRealtimeData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEntity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EntityRealtimeData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EntityRealtimeData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastStaticMapUUID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEntity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEntity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastStaticMapUUID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEntity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEntity
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthEntity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EntityData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEntity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EntityData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EntityData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntityUUID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEntity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEntity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EntityUUID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RealTimeData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEntity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEntity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RealTimeData == nil {
				m.RealTimeData = &EntityRealtimeData{}
			}
			if err := m.RealTimeData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Components", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEntity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEntity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Components = append(m.Components, &Component{})
			if err := m.Components[len(m.Components)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEntity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEntity
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthEntity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipEntity(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowEntity
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEntity
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEntity
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthEntity
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupEntity
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthEntity
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthEntity        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowEntity          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupEntity = fmt.Errorf("proto: unexpected end of group")
)
